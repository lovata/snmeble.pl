- name: 'Add docker host'
  hosts: localhost
  tasks:
      # Gather facts
      - name: 'Include global vars'
        include_vars:
            dir: ./../../vars/global
      - name: 'Get container status'
        docker_container_info:
            name: "{{ SHORT_PROJECT_NAME }}_backend_app_1"
        register: status
      - add_host:
            env: "{{ env }}"
            hostname: "backend_app"
            ansible_connection: "docker"
            ansible_host: "{{ SHORT_PROJECT_NAME }}{{ (status.exists)|ternary('_', '-') }}backend_app{{ (status.exists)|ternary('_', '-') }}1"
            ansible_python_interpreter: "/usr/bin/python3"
- name: 'Connect to docker backend_app'
  hosts: backend_app
  remote_user: sail
  gather_facts: no
  tasks:
    # Gather facts
    - name: 'Include global vars'
      include_vars:
          dir: ./../../vars/global
    - name: 'Include environment vars'
      include_vars:
          dir: ./../../vars/{{ env }}
    - name: 'Run npm build'
      command: "npm run build"
      args:
          chdir: "{{ APP_CODE_PATH_CONTAINER }}/themes/{{ ACTIVE_THEME }}"
- name: 'Add production docker host'
  hosts: localhost
  tasks:
      # Gather facts
      - name: 'Include global vars'
        include_vars:
            dir: ./../../vars/global
      - name: 'Include production vars'
        include_vars:
            dir: ./../../vars/production
      - name: 'Create zip file with vendor'
        archive:
            path:
                - './../../../app/vendor/*'
            dest: './../../../app/vendor.zip'
            format: zip
      - name: 'Create zip file with npm build'
        archive:
            path:
                - './../../../app/themes/{{ACTIVE_THEME}}/assets/build/*'
            dest: './../../../app/themes/{{ACTIVE_THEME}}/assets/build.zip'
            format: zip
      - add_host:
            env: "production"
            hostname: "production_app"
            ansible_connection: "ssh"
            ansible_host: "{{ SERVER_IP }}"
            ansible_port: "{{ SERVER_PORT }}"
            ansible_python_interpreter: "/usr/bin/python"
- name: 'Connect to production server'
  hosts: "production_app"
  remote_user: hostchain
  tasks:
      # Gather facts
      - name: 'Include global vars'
        include_vars:
            dir: ./../../vars/global
      - name: 'Include production vars'
        include_vars:
            dir: ./../../vars/production

      # Copy project files and configs
      - name: 'Create .env file for application'
        template:
          src: ./../../templates/app/production.env.j2
          dest: "{{ PATH_TO_PROJECT_FOLDER }}/app/.env"
          force: true
      - name: 'Create auth.json file for application'
        template:
          src: ./../../templates/app/auth.json.j2
          dest: "{{ PATH_TO_PROJECT_FOLDER }}/app/auth.json"
          force: true
      - name: 'Create .htaccess file'
        template:
          src: ./../../templates/apache2/production.htaccess
          dest: "{{ PATH_TO_PROJECT_FOLDER }}/app/.htaccess"
          force: true

      # Copy archives
      - name: 'Copy vendor folder'
        ansible.builtin.copy:
            src: ./../../../app/vendor.zip
            dest: "{{ PATH_TO_PROJECT_FOLDER }}/app/"
            mode: '0644'
      - name: 'Copy build folder'
        ansible.builtin.copy:
            src: './../../../app/themes/{{ACTIVE_THEME}}/assets/build.zip'
            dest: "{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/"
            mode: '0644'

      # Prepare vendor folder
      -   name: 'Remove vendor_new folder'
          file:
              path: '{{ PATH_TO_PROJECT_FOLDER }}/app/vendor_new'
              state: absent
      -   name: 'Create vendor_new folder'
          file:
              path: '{{ PATH_TO_PROJECT_FOLDER }}/app/vendor_new'
              state: directory
      -   name: 'Unzip vendor folder'
          unarchive:
              remote_src: true
              dest: '{{ PATH_TO_PROJECT_FOLDER }}/app/vendor_new'
              src: '{{ PATH_TO_PROJECT_FOLDER }}/app/vendor.zip'
      -   name: 'Remove vendor.zip file'
          file:
              path: '{{ PATH_TO_PROJECT_FOLDER }}/app/vendor.zip'
              state: absent

      # Prepare build folder
      -   name: 'Remove build_new folder'
          file:
              path: '{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build_new'
              state: absent
      -   name: 'Create build_new folder'
          file:
              path: '{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build_new'
              state: directory
      -   name: 'Unzip build folder'
          unarchive:
              remote_src: true
              dest: '{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build_new'
              src: '{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build.zip'
      -   name: 'Remove build.zip file'
          file:
              path: '{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build.zip'
              state: absent

      # Update vendor folder
      - name: 'Remove vendor_temp'
        file:
            path: '{{ PATH_TO_PROJECT_FOLDER }}/app/vendor_temp'
            state: absent
      - name: 'Move vendor folder to vendor_temp'
        command: 'mv {{ PATH_TO_PROJECT_FOLDER }}/app/vendor {{ PATH_TO_PROJECT_FOLDER }}/app/vendor_temp'
      - name: 'Move vendor_new folder to vendor'
        command: 'mv {{ PATH_TO_PROJECT_FOLDER }}/app/vendor_new {{ PATH_TO_PROJECT_FOLDER }}/app/vendor'

      # Update project via git
      - name: "Clone app repo"
        git:
            repo: "git@github.com:lovata/.com.git"
            dest: "{{ PATH_TO_PROJECT_FOLDER }}"
            version: "master"
            key_file: "{{ PATH_TO_SSH_KEY }}"
            force: yes

      # Update build folder
      - name: 'Remove build_temp'
        file:
            path: '{{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build_temp'
            state: absent
      - name: 'Move build folder to build_temp'
        command: 'mv {{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build {{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build_temp'
      - name: 'Move build_new folder to build'
        command: 'mv {{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build_new {{ PATH_TO_PROJECT_FOLDER }}/app/themes/{{ACTIVE_THEME}}/assets/build'
- name: 'Remove archives'
  hosts: localhost
  tasks:
      - name: 'Remove vendor.zip file'
        file:
            path: './../../../app/vendor.zip'
            state: absent
      - name: 'Remove build.zip file'
        file:
            path: './../../../app/themes/{{ACTIVE_THEME}}/assets/build.zip'
            state: absent
